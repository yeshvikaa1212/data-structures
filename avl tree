#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int key;
    struct Node* left;
    struct Node* right;
} Node;

Node* newNode(int key) {
    Node* node = (Node*)malloc(sizeof(Node));
    node->key = key;
    node->left = NULL;
    node->right = NULL;
    return node;
}

Node* insertNode(Node* node, int key) {
    if (node == NULL) return newNode(key);
    if (key < node->key) node->left = insertNode(node->left, key);
    else node->right = insertNode(node->right, key);
    return node;
}

void displayInOrder(Node* node) {
    if (node == NULL) return;
    displayInOrder(node->left);
    printf("%d ", node->key);
    displayInOrder(node->right);
}

int main() {
    Node* root = NULL;
    root = insertNode(root, 10);
    root = insertNode(root, 20);
    root = insertNode(root, 30);

    printf("In-order traversal: ");
    displayInOrder(root);
    printf("\n");

    Node* temp = root->right;
    root->key = temp->key;
    root->right = temp->right;
    free(temp);

    printf("In-order traversal after deletion: ");
    displayInOrder(root);
    printf("\n");

    return 0;
}
